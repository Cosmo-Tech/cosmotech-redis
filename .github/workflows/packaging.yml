name: Packaging

on:
  push:
    branches:
      - main
    tags:
      - '*'

env:
  IMAGE_NAME: cosmotech-redis

jobs:

  push_container_images_to_registries:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.30.0
        id: scan
        # Add TRIVY_DB_REPOSITORY due to ratelimit issue
        # https://github.com/aquasecurity/trivy-action/issues/389
        env:
          DOCKLE_HOST: "unix:///var/run/docker.sock"
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db:1

        # TODO For now, do not block if the container scan action returns issues
        continue-on-error: true

        with:
          image-ref: $IMAGE_NAME
          format: "sarif"
          severity: "CRITICAL,HIGH"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

      - name: Archive container image scan report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: container-image-scan-report
          path: "trivy-results.sarif"
          retention-days: 3


      - name: Log into registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
